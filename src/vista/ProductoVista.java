package vista;

import accesoadatos.ProductoData;
import entidad.Producto;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class ProductoVista extends javax.swing.JPanel {

    private static DefaultTableModel tableModel = new DefaultTableModel() {
        public boolean isCellEditable(int r, int c) {
            return false;
        }
    };
    
    private ProductoData produData = new ProductoData();
    
    public ProductoVista() {
        initComponents();
        cargarModeloTabla();
        refrescarTabla();
        agruparRadioButton();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtCodigo = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtDescripcion = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtPrecioActual = new javax.swing.JTextField();
        checkEstado = new javax.swing.JCheckBox();
        jLabel6 = new javax.swing.JLabel();
        txtStock = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        btnLimpiarCampos = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableProducto = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        btnRegistrar = new javax.swing.JButton();
        btnBaja = new javax.swing.JButton();
        btnAlta = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        txtBuscar = new javax.swing.JTextField();
        btnModificar = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        btnStockMinimo = new javax.swing.JRadioButton();
        btnActivo = new javax.swing.JRadioButton();
        btnInactivo = new javax.swing.JRadioButton();
        btnMostrarProductos = new javax.swing.JRadioButton();

        setBackground(new java.awt.Color(237, 230, 219));

        jPanel1.setBackground(new java.awt.Color(162, 179, 139));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));

        jLabel1.setFont(new java.awt.Font("Liberation Sans", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Código");

        txtCodigo.setEditable(false);
        txtCodigo.setFont(new java.awt.Font("Liberation Sans", 0, 14)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Liberation Sans", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Nombre");

        txtNombre.setFont(new java.awt.Font("Liberation Sans", 0, 14)); // NOI18N

        jLabel3.setFont(new java.awt.Font("Liberation Sans", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Descripción");

        txtDescripcion.setFont(new java.awt.Font("Liberation Sans", 0, 14)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Liberation Sans", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Precio actual");

        txtPrecioActual.setFont(new java.awt.Font("Liberation Sans", 0, 14)); // NOI18N
        txtPrecioActual.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPrecioActualKeyTyped(evt);
            }
        });

        checkEstado.setBackground(new java.awt.Color(162, 179, 139));
        checkEstado.setFont(new java.awt.Font("Liberation Sans", 0, 14)); // NOI18N
        checkEstado.setSelected(true);
        checkEstado.setText("Activo");
        checkEstado.setEnabled(false);

        jLabel6.setFont(new java.awt.Font("Liberation Sans", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Stock");

        txtStock.setFont(new java.awt.Font("Liberation Sans", 0, 14)); // NOI18N
        txtStock.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtStockKeyTyped(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Liberation Sans", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Estado");

        btnLimpiarCampos.setBackground(new java.awt.Color(255, 204, 102));
        btnLimpiarCampos.setFont(new java.awt.Font("Liberation Sans", 0, 18)); // NOI18N
        btnLimpiarCampos.setText("Limpiar campos");
        btnLimpiarCampos.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnLimpiarCampos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarCamposActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addGap(112, 112, 112)
                        .addComponent(checkEstado))
                    .addComponent(jLabel1)
                    .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(txtDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(txtPrecioActual, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(txtStock, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(btnLimpiarCampos)))
                .addGap(50, 50, 50))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(3, 3, 3)
                .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19)
                .addComponent(jLabel2)
                .addGap(3, 3, 3)
                .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19)
                .addComponent(jLabel3)
                .addGap(3, 3, 3)
                .addComponent(txtDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19)
                .addComponent(jLabel4)
                .addGap(3, 3, 3)
                .addComponent(txtPrecioActual, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19)
                .addComponent(jLabel6)
                .addGap(3, 3, 3)
                .addComponent(txtStock, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(checkEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnLimpiarCampos)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tableProducto.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tableProducto.getTableHeader().setReorderingAllowed(false);
        tableProducto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tableProductoMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(tableProducto);

        jPanel2.setBackground(new java.awt.Color(237, 230, 219));

        btnRegistrar.setBackground(new java.awt.Color(27, 117, 73));
        btnRegistrar.setFont(new java.awt.Font("Liberation Sans", 0, 18)); // NOI18N
        btnRegistrar.setForeground(new java.awt.Color(255, 255, 255));
        btnRegistrar.setText("Registrar");
        btnRegistrar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnRegistrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrarActionPerformed(evt);
            }
        });

        btnBaja.setBackground(new java.awt.Color(255, 102, 0));
        btnBaja.setFont(new java.awt.Font("Liberation Sans", 0, 18)); // NOI18N
        btnBaja.setForeground(java.awt.Color.white);
        btnBaja.setText("Dar de baja");
        btnBaja.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnBaja.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBajaActionPerformed(evt);
            }
        });

        btnAlta.setBackground(new java.awt.Color(204, 0, 0));
        btnAlta.setFont(new java.awt.Font("Liberation Sans", 0, 18)); // NOI18N
        btnAlta.setForeground(java.awt.Color.white);
        btnAlta.setText("Dar de alta");
        btnAlta.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAlta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAltaActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Liberation Sans", 1, 18)); // NOI18N
        jLabel7.setText("Buscar producto");
        jLabel7.setPreferredSize(new java.awt.Dimension(204, 22));

        txtBuscar.setFont(new java.awt.Font("Liberation Sans", 0, 18)); // NOI18N
        txtBuscar.setPreferredSize(new java.awt.Dimension(300, 26));
        txtBuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBuscarKeyReleased(evt);
            }
        });

        btnModificar.setBackground(new java.awt.Color(0, 102, 204));
        btnModificar.setFont(new java.awt.Font("Liberation Sans", 0, 18)); // NOI18N
        btnModificar.setForeground(new java.awt.Color(255, 255, 255));
        btnModificar.setText("Modificar");
        btnModificar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnRegistrar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnModificar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnBaja)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnAlta)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 68, Short.MAX_VALUE)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnModificar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnBaja)
                        .addComponent(btnRegistrar)
                        .addComponent(btnAlta)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        jPanel3.setBackground(new java.awt.Color(162, 179, 139));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)), "Consultas", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Liberation Sans", 0, 14), new java.awt.Color(255, 255, 255))); // NOI18N

        btnStockMinimo.setBackground(new java.awt.Color(162, 179, 139));
        btnStockMinimo.setFont(new java.awt.Font("Liberation Sans", 0, 14)); // NOI18N
        btnStockMinimo.setForeground(new java.awt.Color(255, 255, 255));
        btnStockMinimo.setText("Mostrar productos con stock minimo");
        btnStockMinimo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStockMinimoActionPerformed(evt);
            }
        });

        btnActivo.setBackground(new java.awt.Color(162, 179, 139));
        btnActivo.setFont(new java.awt.Font("Liberation Sans", 0, 14)); // NOI18N
        btnActivo.setForeground(new java.awt.Color(255, 255, 255));
        btnActivo.setText("Mostrar productos activos");
        btnActivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActivoActionPerformed(evt);
            }
        });

        btnInactivo.setBackground(new java.awt.Color(162, 179, 139));
        btnInactivo.setFont(new java.awt.Font("Liberation Sans", 0, 14)); // NOI18N
        btnInactivo.setForeground(new java.awt.Color(255, 255, 255));
        btnInactivo.setText("Mostrar productos inactivos");
        btnInactivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInactivoActionPerformed(evt);
            }
        });

        btnMostrarProductos.setBackground(new java.awt.Color(162, 179, 139));
        btnMostrarProductos.setFont(new java.awt.Font("Liberation Sans", 0, 14)); // NOI18N
        btnMostrarProductos.setForeground(new java.awt.Color(255, 255, 255));
        btnMostrarProductos.setSelected(true);
        btnMostrarProductos.setText("Mostrar todos los productos");
        btnMostrarProductos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMostrarProductosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnActivo)
                    .addComponent(btnInactivo)
                    .addComponent(btnMostrarProductos)
                    .addComponent(btnStockMinimo))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnMostrarProductos)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnActivo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnInactivo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnStockMinimo)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtPrecioActualKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPrecioActualKeyTyped
        char caracter = evt.getKeyChar();
        if((caracter < '0') || (caracter > '9')){
            evt.consume();
        }
    }//GEN-LAST:event_txtPrecioActualKeyTyped

    private void txtStockKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtStockKeyTyped
        char caracter = evt.getKeyChar();
        if((caracter < '0') || (caracter > '9')){
            evt.consume();
        }
    }//GEN-LAST:event_txtStockKeyTyped

    private void btnRegistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrarActionPerformed
        try {
            if (txtNombre.getText().isEmpty() || txtDescripcion.getText().isEmpty() || txtPrecioActual.getText().isEmpty() || txtStock.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Debe completar todos los campos.", "Error al registrar", HEIGHT);
            } else {
                Producto producto = new Producto(
                    txtNombre.getText(),
                    txtDescripcion.getText(),
                    Double.parseDouble(txtPrecioActual.getText()),
                    Integer.parseInt(txtStock.getText()),
                    true
                );//end Producto constructor
                
                produData.nuevoProducto(producto);            
                refrescarTabla();
                limpiarCampos();
                btnMostrarProductos.setSelected(true);
                
                // Actualiza los ComboBox de las otras vistas
                CompraVista.cargarComboProducto();
                DetalleCompraVista.cargarComboProducto();
            }//end if-else
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(this, "El precio y/o stock ingresado es invalido.", "Error al registrar", HEIGHT);
        }
    }//GEN-LAST:event_btnRegistrarActionPerformed

    private void btnBajaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBajaActionPerformed
        try {
            int row = tableProducto.getSelectedRow();
            int id = (int) tableProducto.getValueAt(row, 0);

            if (row != -1 && (String) tableProducto.getValueAt(row, 5) == "Activo") {
                produData.cambiarEstadoProducto(id);
            } else {
                JOptionPane.showMessageDialog(this, "El producto ya está dado de baja.");
            }
            refrescarTabla();
            limpiarCampos();
            btnMostrarProductos.setSelected(true);
            
            // Actualiza los ComboBox de las otras vistas
            CompraVista.cargarComboProducto();
            DetalleCompraVista.cargarComboProducto();
        } catch (ArrayIndexOutOfBoundsException ex) {
            JOptionPane.showMessageDialog(this, "No ha seleccionado ningún producto para dar de baja.");
        }
    }//GEN-LAST:event_btnBajaActionPerformed

    private void btnAltaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAltaActionPerformed
        try {
            int row = tableProducto.getSelectedRow();
            int id = (int) tableProducto.getValueAt(row, 0);

            if (row != -1 && (String) tableProducto.getValueAt(row, 5) == "Inactivo") {
                produData.darAltaProducto(id);
            } else {
                JOptionPane.showMessageDialog(this, "El producto ya está dado de alta.");
            }
            refrescarTabla();
            limpiarCampos();
            btnMostrarProductos.setSelected(true);
            
            // Actualiza los ComboBox de las otras vistas
            CompraVista.cargarComboProducto();
            DetalleCompraVista.cargarComboProducto();
        } catch (ArrayIndexOutOfBoundsException ex) {
            JOptionPane.showMessageDialog(this, "No ha seleccionado ningún producto.");
        }
    }//GEN-LAST:event_btnAltaActionPerformed

    private void txtBuscarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarKeyReleased
        tableModel.setRowCount(0); // Limpia la tabla.
        buttonGroup1.clearSelection();

        String productoBuscar = txtBuscar.getText().toLowerCase(); // Convierte el texto en minuscula.
        
        for (Producto producto : produData.listarProducto(2)) {
            String nombreProducto = producto.getNombreProducto().toLowerCase(); // Convierte el texto de la base de datos a minuscula.
            
            if (nombreProducto.startsWith(productoBuscar)) {
                String estado = cambiarEstadoAString(producto);
                tableModel.addRow(new Object[] {
                    producto.getIdProducto(),
                    producto.getNombreProducto(),
                    producto.getDescripcion(),
                    producto.getPrecioActual(),
                    producto.getStock(),
                    producto.isEstado()
                });
            }
        }
    }//GEN-LAST:event_txtBuscarKeyReleased

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
        try {
            int codigo = Integer.parseInt(txtCodigo.getText());
            String nombre = txtNombre.getText();
            String descripcion = txtDescripcion.getText();
            double precio = Double.parseDouble(txtPrecioActual.getText());
            int stock = Integer.parseInt(txtStock.getText());
            boolean estado = checkEstado.isSelected();

            Producto produ = new Producto(codigo, nombre, descripcion, precio, stock, estado);
            produData.modificarProducto(produ);
            
            refrescarTabla();
            limpiarCampos();
            MenuVista.notificacion();
            btnMostrarProductos.setSelected(true);
            
            // Actualiza los ComboBox de las otras vistas
            CompraVista.cargarComboProducto();
            DetalleCompraVista.cargarComboProducto();
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(this, "El precio y/o stock ingresado es invalido.", "Error al modificar", HEIGHT);
        }
    }//GEN-LAST:event_btnModificarActionPerformed

    private void btnLimpiarCamposActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarCamposActionPerformed
        limpiarCampos();
    }//GEN-LAST:event_btnLimpiarCamposActionPerformed

    private void tableProductoMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableProductoMousePressed
        int seleccionar = tableProducto.getSelectedRow();
        
        if(seleccionar != -1){
            //Obtenemos los valores de la fila seleccionada
            int codigo = (int)tableModel.getValueAt(seleccionar, 0);
            String nombre = tableModel.getValueAt(seleccionar, 1).toString();
            String descripcion = tableModel.getValueAt(seleccionar, 2).toString();
            double precio = (double)tableModel.getValueAt(seleccionar, 3);
            int stock = (int)tableModel.getValueAt(seleccionar, 4);
            String estado = tableModel.getValueAt(seleccionar, 5).toString();
            
            //Mostramos los datos en los texfields
            txtCodigo.setText(codigo + "");
            txtNombre.setText(nombre);
            txtDescripcion.setText(descripcion);
            txtPrecioActual.setText(precio + "");
            txtStock.setText(stock + "");
            checkEstado.setSelected(cambiarEstadoABoolean(estado));
            cambiarEstadoDelCheck();
        }
    }//GEN-LAST:event_tableProductoMousePressed

    private void btnInactivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInactivoActionPerformed
        tableModel.setRowCount(0); // Limpia la tabla.

        for (Producto producto : produData.listarProductoEstado(0)) {
            String estado = cambiarEstadoAString(producto);
            tableModel.addRow(new Object[]{
                producto.getIdProducto(),
                producto.getNombreProducto(),
                producto.getDescripcion(),
                producto.getPrecioActual(),
                producto.getStock(),
                estado
            });
        }
    }//GEN-LAST:event_btnInactivoActionPerformed

    private void btnActivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActivoActionPerformed
        tableModel.setRowCount(0); // Limpia la tabla.
        
        for (Producto producto : produData.listarProductoEstado(1)) {
            String estado = cambiarEstadoAString(producto);
            tableModel.addRow(new Object[]{
                producto.getIdProducto(),
                producto.getNombreProducto(),
                producto.getDescripcion(),
                producto.getPrecioActual(),
                producto.getStock(),
                estado
            });
        }
    }//GEN-LAST:event_btnActivoActionPerformed

    private void btnMostrarProductosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMostrarProductosActionPerformed
        refrescarTabla();
    }//GEN-LAST:event_btnMostrarProductosActionPerformed

    private void btnStockMinimoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStockMinimoActionPerformed
        if (btnStockMinimo.isSelected()) {
            tableModel.setRowCount(0); // Limpia la tabla.
            
            for (Producto producto : produData.listarStockMinimo(10)) {
                String estado = cambiarEstadoAString(producto);
                tableModel.addRow(new Object[]{
                    producto.getIdProducto(),
                    producto.getNombreProducto(),
                    producto.getDescripcion(),
                    producto.getPrecioActual(),
                    producto.getStock(),
                    estado
                });
            }//end for
        } else {
            refrescarTabla();
        }//end if-else
    }//GEN-LAST:event_btnStockMinimoActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton btnActivo;
    private javax.swing.JButton btnAlta;
    private javax.swing.JButton btnBaja;
    private javax.swing.JRadioButton btnInactivo;
    private javax.swing.JButton btnLimpiarCampos;
    private javax.swing.JButton btnModificar;
    private javax.swing.JRadioButton btnMostrarProductos;
    private javax.swing.JButton btnRegistrar;
    private javax.swing.JRadioButton btnStockMinimo;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JCheckBox checkEstado;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tableProducto;
    private javax.swing.JTextField txtBuscar;
    private javax.swing.JTextField txtCodigo;
    private javax.swing.JTextField txtDescripcion;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtPrecioActual;
    private javax.swing.JTextField txtStock;
    // End of variables declaration//GEN-END:variables

    private void cargarModeloTabla() {
        tableModel.addColumn("CÓDIGO");
        tableModel.addColumn("NOMBRE");
        tableModel.addColumn("DESCRIPCIÓN");
        tableModel.addColumn("PRECIO ACTUAL");
        tableModel.addColumn("STOCK");
        tableModel.addColumn("ESTADO");
        tableProducto.setModel(tableModel);
    }
    
    protected static void refrescarTabla() {
        tableModel.setRowCount(0); // Limpia la tabla.
        
        // Es obligatorio instanciar de nuevo un productoData en un método estatico.
        ProductoData prodData = new ProductoData();
        
        for (Producto producto : prodData.listarProducto(2)) {
            String estado = cambiarEstadoAString(producto);
            tableModel.addRow(new Object[]{
                producto.getIdProducto(),
                producto.getNombreProducto(),
                producto.getDescripcion(),
                producto.getPrecioActual(),
                producto.getStock(),
                estado
            });
        }
    }
    
    private boolean cambiarEstadoABoolean(String estado) {
        boolean estadoBool = false;
        if (estado == "Activo") {
            estadoBool = true;
        } else if (estado == "Inactivo") {
            estadoBool = false;
        }
        return estadoBool;
    }
    
    private static String cambiarEstadoAString(Producto producto) {
        String estado;
        if (producto.isEstado()) {
            estado = "Activo";
        } else {
            estado = "Inactivo";
        }
        return estado;
    }
    
    private void cambiarEstadoDelCheck() {
        if (checkEstado.isSelected()) {
            checkEstado.setSelected(true);
            checkEstado.setText("Activo");
        } else {
            checkEstado.setSelected(false);
            checkEstado.setText("Inactivo");
        }
    }
    
    private void limpiarCampos() {
        txtCodigo.setText("");
        txtNombre.setText("");
        txtDescripcion.setText("");
        txtPrecioActual.setText("");
        txtStock.setText("");
    }
    
    private void agruparRadioButton() {
        buttonGroup1.add(btnMostrarProductos);
        buttonGroup1.add(btnActivo);
        buttonGroup1.add(btnInactivo);
        buttonGroup1.add(btnStockMinimo);
    }
}
